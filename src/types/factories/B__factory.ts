/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { B, BInterface } from "../B";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_A",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_b",
        type: "uint256",
      },
    ],
    name: "setB",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516106a03803806106a0833981810160405281019061003291906100da565b60046000600101819055506045600060020160006101000a81548160ff021916908360ff16021790555060f5600060020160016101000a81548160ff021916908360ff16021790555080600060020160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b6000815190506100d481610135565b92915050565b6000602082840312156100ec57600080fd5b60006100fa848285016100c5565b91505092915050565b600061010e82610115565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b61013e81610103565b811461014957600080fd5b50565b6105458061015b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806309cdcf9b1461003b578063a1c5191514610057575b600080fd5b610055600480360381019061005091906102d4565b610075565b005b61005f6101ee565b60405161006c91906103cc565b60405180910390f35b80600060010181905550600080600060020160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166001846100cb9190610419565b6040516024016100db91906103cc565b6040516020818303038152906040527fee919d50000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516101659190610385565b600060405180830381855af49150503d80600081146101a0576040519150601f19603f3d011682016040523d82523d6000602084013e6101a5565b606091505b50915091506101e96040518060400160405280600781526020017f7375636365737300000000000000000000000000000000000000000000000000815250836101fa565b505050565b60008060010154905090565b610292828260405160240161021092919061039c565b6040516020818303038152906040527fc3b55635000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610296565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000813590506102ce816104f8565b92915050565b6000602082840312156102e657600080fd5b60006102f4848285016102bf565b91505092915050565b6103068161046f565b82525050565b6000610317826103e7565b61032181856103fd565b9350610331818560208601610485565b80840191505092915050565b6000610348826103f2565b6103528185610408565b9350610362818560208601610485565b61036b816104e7565b840191505092915050565b61037f8161047b565b82525050565b6000610391828461030c565b915081905092915050565b600060408201905081810360008301526103b6818561033d565b90506103c560208301846102fd565b9392505050565b60006020820190506103e16000830184610376565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006104248261047b565b915061042f8361047b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610464576104636104b8565b5b828201905092915050565b60008115159050919050565b6000819050919050565b60005b838110156104a3578082015181840152602081019050610488565b838111156104b2576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b6105018161047b565b811461050c57600080fd5b5056fea2646970667358221220915a91bfbc7f75642317ec1befc5718fee19e53af8edcfbf5703f2ce60a2356964736f6c63430008040033";

export class B__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _A: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<B> {
    return super.deploy(_A, overrides || {}) as Promise<B>;
  }
  getDeployTransaction(
    _A: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_A, overrides || {});
  }
  attach(address: string): B {
    return super.attach(address) as B;
  }
  connect(signer: Signer): B__factory {
    return super.connect(signer) as B__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BInterface {
    return new utils.Interface(_abi) as BInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): B {
    return new Contract(address, _abi, signerOrProvider) as B;
  }
}
