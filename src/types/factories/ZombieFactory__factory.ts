/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZombieFactory, ZombieFactoryInterface } from "../ZombieFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "zombieId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
    ],
    name: "NewZombie",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "createRandomZombie",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zombieToOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "zombies",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "dna",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "level",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "readyTime",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "winCount",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "lossCount",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526010600155600154600a6200001a91906200014e565b600255620151806003553480156200003157600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3620002d1565b6000808291508390505b600185111562000145578086048111156200011d576200011c62000295565b5b60018516156200012d5780820291505b80810290506200013d85620002c4565b9450620000fd565b94509492505050565b60006200015b826200028b565b915062000168836200028b565b9250620001977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846200019f565b905092915050565b600082620001b1576001905062000284565b81620001c1576000905062000284565b8160018114620001da5760028114620001e5576200021b565b600191505062000284565b60ff841115620001fa57620001f962000295565b5b8360020a91508482111562000214576200021362000295565b5b5062000284565b5060208310610133831016604e8410600b8410161715620002555782820a9050838111156200024f576200024e62000295565b5b62000284565b620002648484846001620000f3565b925090508184048111156200027e576200027d62000295565b5b81810290505b9392505050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b61103280620002e16000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80637bff0a011161005b5780637bff0a01146100f15780638da5cb5b1461010d5780638f32d59b1461012b578063f2fde38b146101495761007d565b80632052465e14610082578063528b7b8f146100b7578063715018a6146100e7575b600080fd5b61009c60048036038101906100979190610a5b565b610165565b6040516100ae96959493929190610ba9565b60405180910390f35b6100d160048036038101906100cc9190610a5b565b610275565b6040516100de9190610b73565b60405180910390f35b6100ef6102a8565b005b61010b60048036038101906101069190610a1a565b610377565b005b610115610414565b6040516101229190610b73565b60405180910390f35b61013361043d565b6040516101409190610b8e565b60405180910390f35b610163600480360381019061015e91906109f1565b610494565b005b6006818154811061017557600080fd5b906000526020600020906003020160009150905080600001805461019890610e1e565b80601f01602080910402602001604051908101604052809291908181526020018280546101c490610e1e565b80156102115780601f106101e657610100808354040283529160200191610211565b820191906000526020600020905b8154815290600101906020018083116101f457829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b60046020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102b061043d565b6102b957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146103f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f090610c11565b60405180910390fd5b6000610404826104b1565b905061041082826104f6565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b61049c61043d565b6104a557600080fd5b6104ae81610773565b50565b600080826040516020016104c59190610b5c565b6040516020818303038152906040528051906020012060001c9050600254816104ee9190610e81565b915050919050565b60006040518060c00160405280848152602001838152602001600163ffffffff1681526020016003544261052a9190610cec565b63ffffffff168152602001600061ffff168152602001600061ffff168152509050600681908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190805190602001906105939291906108bc565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050600060016006805490506106489190610d42565b9050336004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506106ef6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461086a90919063ffffffff16565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b781858560405161076593929190610c31565b60405180910390a150505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107ad57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082846108799190610cec565b9050838110156108b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b8091505092915050565b8280546108c890610e1e565b90600052602060002090601f0160209004810192826108ea5760008555610931565b82601f1061090357805160ff1916838001178555610931565b82800160010185558215610931579182015b82811115610930578251825591602001919060010190610915565b5b50905061093e9190610942565b5090565b5b8082111561095b576000816000905550600101610943565b5090565b600061097261096d84610c94565b610c6f565b90508281526020810184848401111561098a57600080fd5b610995848285610ddc565b509392505050565b6000813590506109ac81610fce565b92915050565b600082601f8301126109c357600080fd5b81356109d384826020860161095f565b91505092915050565b6000813590506109eb81610fe5565b92915050565b600060208284031215610a0357600080fd5b6000610a118482850161099d565b91505092915050565b600060208284031215610a2c57600080fd5b600082013567ffffffffffffffff811115610a4657600080fd5b610a52848285016109b2565b91505092915050565b600060208284031215610a6d57600080fd5b6000610a7b848285016109dc565b91505092915050565b610a8d81610d76565b82525050565b610a9c81610d88565b82525050565b6000610aad82610cc5565b610ab78185610cd0565b9350610ac7818560208601610deb565b610ad081610f6e565b840191505092915050565b6000610ae682610cc5565b610af08185610ce1565b9350610b00818560208601610deb565b80840191505092915050565b6000610b19603783610cd0565b9150610b2482610f7f565b604082019050919050565b610b3881610d94565b82525050565b610b4781610dc2565b82525050565b610b5681610dcc565b82525050565b6000610b688284610adb565b915081905092915050565b6000602082019050610b886000830184610a84565b92915050565b6000602082019050610ba36000830184610a93565b92915050565b600060c0820190508181036000830152610bc38189610aa2565b9050610bd26020830188610b3e565b610bdf6040830187610b4d565b610bec6060830186610b4d565b610bf96080830185610b2f565b610c0660a0830184610b2f565b979650505050505050565b60006020820190508181036000830152610c2a81610b0c565b9050919050565b6000606082019050610c466000830186610b3e565b8181036020830152610c588185610aa2565b9050610c676040830184610b3e565b949350505050565b6000610c79610c8a565b9050610c858282610e50565b919050565b6000604051905090565b600067ffffffffffffffff821115610caf57610cae610f3f565b5b610cb882610f6e565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b6000610cf782610dc2565b9150610d0283610dc2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d3757610d36610eb2565b5b828201905092915050565b6000610d4d82610dc2565b9150610d5883610dc2565b925082821015610d6b57610d6a610eb2565b5b828203905092915050565b6000610d8182610da2565b9050919050565b60008115159050919050565b600061ffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b82818337600083830152505050565b60005b83811015610e09578082015181840152602081019050610dee565b83811115610e18576000848401525b50505050565b60006002820490506001821680610e3657607f821691505b60208210811415610e4a57610e49610f10565b5b50919050565b610e5982610f6e565b810181811067ffffffffffffffff82111715610e7857610e77610f3f565b5b80604052505050565b6000610e8c82610dc2565b9150610e9783610dc2565b925082610ea757610ea6610ee1565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f646f6e27742062652061626c6520746f2063726561746520756e6c696d69746560008201527f64207a6f6d6269657320696e2074686569722061726d79000000000000000000602082015250565b610fd781610d76565b8114610fe257600080fd5b50565b610fee81610dc2565b8114610ff957600080fd5b5056fea2646970667358221220a30c4891843cf30aa9a0b248abc817111e93dc6ce0058b76fdaed9cb6c3ba62164736f6c63430008040033";

export class ZombieFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZombieFactory> {
    return super.deploy(overrides || {}) as Promise<ZombieFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ZombieFactory {
    return super.attach(address) as ZombieFactory;
  }
  connect(signer: Signer): ZombieFactory__factory {
    return super.connect(signer) as ZombieFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZombieFactoryInterface {
    return new utils.Interface(_abi) as ZombieFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZombieFactory {
    return new Contract(address, _abi, signerOrProvider) as ZombieFactory;
  }
}
