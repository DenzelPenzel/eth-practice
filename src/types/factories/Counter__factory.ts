/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Counter, CounterInterface } from "../Counter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "counter",
        type: "uint256",
      },
    ],
    name: "CounterInc",
    type: "event",
  },
  {
    inputs: [],
    name: "count",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061036f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806306661abd1461003b5780638ada066e14610045575b600080fd5b610043610063565b005b61004d6100f6565b60405161005a919061023c565b60405180910390f35b600080815480929190610075906102b0565b91905055506100bb6040518060400160405280600e81526020017f436f756e746572206973206e6f770000000000000000000000000000000000008152506000546100ff565b7feec7b728df2430a6685bba924a4a787b147d45a2b38034570f9fe9613a91ea446000546040516100ec919061023c565b60405180910390a1565b60008054905090565b610197828260405160240161011592919061020c565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061019b565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006101cf82610257565b6101d98185610262565b93506101e981856020860161027d565b6101f281610328565b840191505092915050565b61020681610273565b82525050565b6000604082019050818103600083015261022681856101c4565b905061023560208301846101fd565b9392505050565b600060208201905061025160008301846101fd565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b8381101561029b578082015181840152602081019050610280565b838111156102aa576000848401525b50505050565b60006102bb82610273565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102ee576102ed6102f9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f830116905091905056fea26469706673582212205f1232b8a1722690513e507aeb9e522fc1e85dddb1788e76ba8193a5d4f13bce64736f6c63430008040033";

export class Counter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
